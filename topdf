<!DOCTYPE html>
<html>
<head>
  <title>JPG 預覽與 PDF 產生</title>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
  <style>
    img.preview {
      max-width: 200px;
      margin: 10px;
    }
    iframe {
      width: 100%;
      height: 500px;
      border: 1px solid #ccc;
      margin-top: 10px;
    }
  </style>
</head>
<body>
  <h3>上傳 JPG 預覽並轉成 PDF</h3>
  <input type="file" id="fileInput" accept="image/jpeg" multiple>
  <div id="previewContainer"></div>
  <button onclick="generatePDF()">產生 PDF 預覽</button>
  <button onclick="downloadPDF()" disabled id="downloadBtn">下載 PDF</button>

  <iframe id="pdfPreview"></iframe>

  <script>
    let pdfBlob = null;

    document.getElementById('fileInput').addEventListener('change', function () {
      const container = document.getElementById('previewContainer');
      container.innerHTML = '';
      for (const file of this.files) {
        const reader = new FileReader();
        reader.onload = function (e) {
          const img = document.createElement('img');
          img.src = e.target.result;
          img.className = 'preview';
          container.appendChild(img);
        };
        reader.readAsDataURL(file);
      }
    });

    async function generatePDF() {
      const { jsPDF } = window.jspdf;
      const files = document.getElementById('fileInput').files;

      if (files.length === 0) {
        alert("請上傳圖片");
        return;
      }

      const pdf = new jsPDF();
      for (let i = 0; i < files.length; i++) {
        const imgData = await fileToBase64(files[i]);
        const img = new Image();
        img.src = imgData;

        await new Promise(resolve => {
          img.onload = () => {
            const imgWidth = 210;
            const ratio = img.height / img.width;
            const imgHeight = imgWidth * ratio;
            if (i > 0) pdf.addPage();
            pdf.addImage(imgData, 'JPEG', 0, 0, imgWidth, imgHeight);
            resolve();
          };
        });
      }

      pdfBlob = pdf.output('blob');
      const url = URL.createObjectURL(pdfBlob);
      document.getElementById('pdfPreview').src = url;
      document.getElementById('downloadBtn').disabled = false;
    }

    function downloadPDF() {
      if (!pdfBlob) return;
      const link = document.createElement('a');
      link.href = URL.createObjectURL(pdfBlob);
      link.download = 'images.pdf';
      link.click();
    }

    function fileToBase64(file) {
      return new Promise((resolve, reject) => {
        const reader = new FileReader();
        reader.readAsDataURL(file);
        reader.onload = () => resolve(reader.result);
        reader.onerror = error => reject(error);
      });
    }
  </script>
</body>
</html>